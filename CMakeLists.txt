cmake_minimum_required(VERSION 3.16.4)

project(flame)

set_property(GLOBAL PROPERTY USE_FOLDERS ON)

enable_language(ASM_MASM)

add_definitions(-W0 -std:c++latest)

include("cmake_utils.cmake")

foreach(type ${CMAKE_CONFIGURATION_TYPES})
	string(TOUPPER ${type} type_u)
	string(TOLOWER ${type} type_l)
	set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_${type_u} "${CMAKE_SOURCE_DIR}/bin/${type_l}")
	set(CMAKE_LIBRARY_OUTPUT_DIRECTORY_${type_u} "${CMAKE_SOURCE_DIR}/bin/${type_l}")
	set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_${type_u} "${CMAKE_SOURCE_DIR}/bin/${type_l}")
endforeach()

string(FIND "${CMAKE_LINKER}" "/VC/" pos)
string(SUBSTRING  "${CMAKE_LINKER}" 0 ${pos} VS_LOCATION)

set(GLM_INCLUDE_DIR "" CACHE PATH "GLM Include Directory")
if("${GLM_INCLUDE_DIR}" STREQUAL "")
	message(FATAL_ERROR "GLM dir or path must not be empty")
endif()

set(PUGIXML_INCLUDE_DIR "" CACHE PATH "Pugi XML Directory")
set(PUGIXML_DEBUG_STATIC_LIBRARY_PATH "${temp}/build/Debug/pugixml.lib" CACHE FILEPATH "Pugi XML Debug STATIC Library Path")
set(PUGIXML_RELEASE_STATIC_LIBRARY_PATH "${temp}/build/Release/pugixml.lib" CACHE FILEPATH "Pugi XML Release STATIC Library Path")
if("${PUGIXML_INCLUDE_DIR}" STREQUAL "" OR "${PUGIXML_DEBUG_STATIC_LIBRARY_PATH}" STREQUAL "" OR "${PUGIXML_RELEASE_STATIC_LIBRARY_PATH}" STREQUAL "")
	message(FATAL_ERROR "PUGIXML dir or path must not be empty")
endif()

set(NJSON_INCLUDE_DIR "" CACHE PATH "NJSON Include Directory")
if("${NJSON_INCLUDE_DIR}" STREQUAL "")
	message(FATAL_ERROR "NJSON dir or path must not be empty")
endif()

set(CPPCODEC_INCLUDE_DIR "" CACHE PATH "CPPCODEC Include Directory")
if("${CPPCODEC_INCLUDE_DIR}" STREQUAL "")
	message(FATAL_ERROR "CPPCODEC dir or path must not be empty")
endif()

set(BOOST_REGEX_INCLUDE_DIR "" CACHE PATH "BOOST REGEX Include Directory")
if("${BOOST_REGEX_INCLUDE_DIR}" STREQUAL "")
	message(FATAL_ERROR "BOOST REGEX dir or path must not be empty")
endif()

set(STB_INCLUDE_DIR "" CACHE PATH "STB Include Directory")
if("${STB_INCLUDE_DIR}" STREQUAL "")
	message(FATAL_ERROR "STB dir or path must not be empty")
endif()

set(SHA1_INCLUDE_DIR "" CACHE PATH "SHA1 Include Directory")
if("${SHA1_INCLUDE_DIR}" STREQUAL "")
	message(STATUS "SHA1 dir or path are not completed, USE_SHA1 is disabled")
	set(USE_SHA1 OFF)
else()
	set(USE_SHA1 ON)
endif()

set(OPENAL_INCLUDE_DIR "" CACHE PATH "OpenAL Include Directory")
set(OPENAL_STATIC_LIBRARY_PATH "" CACHE FILEPATH "OpenAL STATIC Library Path")
if("${OPENAL_INCLUDE_DIR}" STREQUAL "" OR "${OPENAL_STATIC_LIBRARY_PATH}" STREQUAL "")
	message(FATAL_ERROR "OpenAL dir or path must not be empty")
endif()

set(LUA_INCLUDE_DIR "" CACHE PATH "LUA Include Directory")
set(LUA_STATIC_LIBRARY_PATH "" CACHE FILEPATH "LUA STATIC Library Path")
set(LUA_DYNAMIC_LIBRARY_PATH "" CACHE FILEPATH "LUA DYNAMIC Library Path")
if("${LUA_INCLUDE_DIR}" STREQUAL "" OR "${LUA_STATIC_LIBRARY_PATH}" STREQUAL "" OR "${LUA_DYNAMIC_LIBRARY_PATH}" STREQUAL "")
	message(FATAL_ERROR "LUA dir or path must not be empty")
endif()

set(MYSQL_INCLUDE_DIR "" CACHE PATH "MYSQL Include Directory")
set(MYSQL_STATIC_LIBRARY_PATH "" CACHE FILEPATH "MYSQL STATIC Library Path")
set(MYSQL_DYNAMIC_LIBRARY_PATH "" CACHE FILEPATH "MYSQL DYNAMIC Library Path")
if("${MYSQL_INCLUDE_DIR}" STREQUAL "" OR "${MYSQL_STATIC_LIBRARY_PATH}" STREQUAL "" OR "${MYSQL_DYNAMIC_LIBRARY_PATH}" STREQUAL "")
	message(STATUS "MYSQL dir or path are not completed, turn off USE_MYSQL")
	set(USE_MYSQL OFF)
else()
	set(USE_MYSQL ON)
endif()

set(SPIRV_CROSS_INCLUDE_DIR "" CACHE PATH "SPIRV Cross Include Directory")
set(SPIRV_CROSS_LIBRARY_DIR "" CACHE PATH "SPIRV Cross Library Directory")
if("${SPIRV_CROSS_INCLUDE_DIR}" STREQUAL "" OR "${SPIRV_CROSS_LIBRARY_DIR}" STREQUAL "")
	message(FATAL_ERROR "SPIRV Cross dir or path must not be empty")
endif()

set(GLI_INCLUDE_DIR "" CACHE PATH "GLI Include Directory")
if("${GLI_INCLUDE_DIR}" STREQUAL "")
	message(FATAL_ERROR "GLI dir or path must not be empty")
endif()

set(ASSIMP_INCLUDE_DIR "" CACHE PATH "Assimp Include Directory")
set(ASSIMP_STATIC_LIBRARY_PATH "" CACHE FILEPATH "Assimp STATIC Library Path")
set(ASSIMP_SHARED_LIBRARY_PATH "" CACHE FILEPATH "Assimp SHARED Library Path")
if("${ASSIMP_INCLUDE_DIR}" STREQUAL "" OR "${ASSIMP_STATIC_LIBRARY_PATH}" STREQUAL "" OR "${ASSIMP_SHARED_LIBRARY_PATH}" STREQUAL "")
	message(STATUS "Assimp dir or path are not completed, turn off USE_ASSIMP")
	set(USE_ASSIMP OFF)
else()
	set(USE_ASSIMP ON)
endif()

set(PHYSX_INCLUDE_DIR "" CACHE PATH "PhysX Directory")
set(PHYSX_LIBRARY_DIR "" CACHE PATH "PhysX Library Directory")
if("${PHYSX_INCLUDE_DIR}" STREQUAL "" OR "${PHYSX_LIBRARY_DIR}" STREQUAL "")
	message(STATUS "PhysX dir or path are not completed, turn off USE_PHYSX")
	set(USE_PHYSX OFF)
else()
	set(USE_PHYSX ON)
endif()

set(SHADER_DIR "${CMAKE_SOURCE_DIR}/assets/shaders")

add_subdirectory(source)
add_subdirectory(tests)
add_subdirectory(tools)
add_subdirectory(games)
