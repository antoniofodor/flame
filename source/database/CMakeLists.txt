if (USE_MYSQL)
	set(USE_DATABASE_MODULE on)

	file(GLOB source_files "*.h*" "*.c*")
	add_library(flame_database SHARED ${source_files})
	set_target_properties(flame_database PROPERTIES FOLDER "flame")
	target_compile_definitions(flame_database PRIVATE FLAME_DATABASE_MODULE)
	target_link_libraries(flame_database flame_foundation)
	target_link_libraries(flame_database "${MYSQL_LIB_PATH}")
	target_include_directories(flame_database PRIVATE "${MYSQL_INCLUDE_DIR}")
	add_custom_command(TARGET flame_database POST_BUILD COMMAND ${CMAKE_COMMAND} -E copy_if_different "${MYSQL_DLL_PATH}" $(TargetDir))
	message(STATUS "database module: MYSQL is required for connection")
	add_dependencies(flame_database typeinfogen_dep)
	add_custom_command(TARGET flame_database POST_BUILD COMMAND $<TARGET_FILE:typeinfogen> -i $<TARGET_FILE:flame_database> -d "${CMAKE_CURRENT_SOURCE_DIR}/typeinfo.desc")

	file(GLOB PUBLIC_HEADER "*.h*")
	list(FILTER PUBLIC_HEADER EXCLUDE REGEX ".*_private[.]h$")
	file(MAKE_DIRECTORY "${CMAKE_SOURCE_DIR}/include/flame/database")
	add_custom_command(TARGET flame_database PRE_BUILD COMMAND ${CMAKE_COMMAND} -E copy_if_different ${PUBLIC_HEADER} "${CMAKE_SOURCE_DIR}/include/flame/database")
else()
	set(USE_DATABASE_MODULE off)
endif()
