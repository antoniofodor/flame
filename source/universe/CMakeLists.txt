file(GLOB SOURCES "*.h*" "*.c*")
file(GLOB COMPONENT_SOURCES "components/*.h*" "components/*.c*")
file(GLOB DRIVER_SOURCES "drivers/*.h*" "drivers/*.c*")
file(GLOB SYSTEM_SOURCES "systems/*.h*" "systems/*.c*")
add_library(flame_universe SHARED ${SOURCES} ${COMPONENT_SOURCES} ${DRIVER_SOURCES} ${SYSTEM_SOURCES})
source_group("common" FILES ${SOURCES})
source_group("components" FILES ${COMPONENT_SOURCES})
source_group("drivers" FILES ${DRIVER_SOURCES})
source_group("systems" FILES ${SYSTEM_SOURCES})
set_target_properties(flame_universe PROPERTIES FOLDER "flame")
set_target_properties(flame_universe PROPERTIES LINK_FLAGS "/INCREMENTAL:NO")
target_compile_definitions(flame_universe PRIVATE FLAME_UNIVERSE_MODULE)
target_link_libraries(flame_universe flame_network)
target_link_libraries(flame_universe flame_database)
target_link_libraries(flame_universe flame_graphics)
target_link_libraries(flame_universe flame_sound)
target_link_libraries(flame_universe flame_physics)
target_link_libraries(flame_universe flame_script)
target_include_directories(flame_universe PRIVATE "${SHADER_DIR}")
add_dependencies(flame_universe typeinfogen_dep)
add_custom_command(TARGET flame_universe POST_BUILD COMMAND $<TARGET_FILE:typeinfogen> -i $<TARGET_FILE:flame_universe> -d "${CMAKE_CURRENT_SOURCE_DIR}/typeinfo.desc")
add_dependencies(flame_universe shader_compiler)
add_custom_command(TARGET flame_universe PRE_BUILD COMMAND $<TARGET_FILE:shader_compiler> "${SHADER_DIR}/element/element.pll")
add_custom_command(TARGET flame_universe PRE_BUILD COMMAND $<TARGET_FILE:shader_compiler> "${SHADER_DIR}/mesh/forward.pll")
add_custom_command(TARGET flame_universe PRE_BUILD COMMAND $<TARGET_FILE:shader_compiler> "${SHADER_DIR}/mesh/gbuffer.pll")
add_custom_command(TARGET flame_universe PRE_BUILD COMMAND $<TARGET_FILE:shader_compiler> "${SHADER_DIR}/terrain/gbuffer.pll")
add_custom_command(TARGET flame_universe PRE_BUILD COMMAND $<TARGET_FILE:shader_compiler> "${SHADER_DIR}/deferred/deferred.pll")
add_custom_command(TARGET flame_universe PRE_BUILD COMMAND $<TARGET_FILE:shader_compiler> "${SHADER_DIR}/particle/particle.pll")
add_custom_command(TARGET flame_universe PRE_BUILD COMMAND $<TARGET_FILE:shader_compiler> "${SHADER_DIR}/post/post.pll")

file(GLOB PUBLIC_HEADER "*.h*")
list(FILTER PUBLIC_HEADER EXCLUDE REGEX ".*_private[.]h$")
file(MAKE_DIRECTORY "${CMAKE_SOURCE_DIR}/include/flame/universe")
add_custom_command(TARGET flame_universe PRE_BUILD COMMAND ${CMAKE_COMMAND} -E copy_if_different ${PUBLIC_HEADER} "${CMAKE_SOURCE_DIR}/include/flame/universe")

file(GLOB PUBLIC_HEADER "components/*.h*")
list(FILTER PUBLIC_HEADER EXCLUDE REGEX ".*_private[.]h$")
file(MAKE_DIRECTORY "${CMAKE_SOURCE_DIR}/include/flame/universe/components")
add_custom_command(TARGET flame_universe PRE_BUILD COMMAND ${CMAKE_COMMAND} -E copy_if_different ${PUBLIC_HEADER} "${CMAKE_SOURCE_DIR}/include/flame/universe/components")

file(GLOB PUBLIC_HEADER "drivers/*.h*")
list(FILTER PUBLIC_HEADER EXCLUDE REGEX ".*_private[.]h$")
file(MAKE_DIRECTORY "${CMAKE_SOURCE_DIR}/include/flame/universe/drivers")
add_custom_command(TARGET flame_universe PRE_BUILD COMMAND ${CMAKE_COMMAND} -E copy_if_different ${PUBLIC_HEADER} "${CMAKE_SOURCE_DIR}/include/flame/universe/drivers")

file(GLOB PUBLIC_HEADER "systems/*.h*")
list(FILTER PUBLIC_HEADER EXCLUDE REGEX ".*_private[.]h$")
file(MAKE_DIRECTORY "${CMAKE_SOURCE_DIR}/include/flame/universe/systems")
add_custom_command(TARGET flame_universe PRE_BUILD COMMAND ${CMAKE_COMMAND} -E copy_if_different ${PUBLIC_HEADER} "${CMAKE_SOURCE_DIR}/include/flame/universe/systems")
