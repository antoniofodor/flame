get_filename_component(DIR ${CMAKE_CURRENT_SOURCE_DIR} NAME)
file(GLOB INCLUDES "${INCLUDE_DIR}/${DIR}/*.h*")
file(GLOB COMPONENT_INCLUDES "${INCLUDE_DIR}/${DIR}/components/*.h*")
file(GLOB DRIVER_INCLUDES "${INCLUDE_DIR}/${DIR}/drivers/*.h*")
file(GLOB SYSTEM_INCLUDES "${INCLUDE_DIR}/${DIR}/systems/*.h*")
file(GLOB SOURCES "*.h*" "*.c*")
file(GLOB COMPONENT_SOURCES "components/*.h*" "components/*.c*")
file(GLOB DRIVER_SOURCES "drivers/*.h*" "drivers/*.c*")
file(GLOB SYSTEM_SOURCES "systems/*.h*" "systems/*.c*")
add_library(flame_universe SHARED 
	${INCLUDES} ${COMPONENT_INCLUDES} ${DRIVER_INCLUDES} ${SYSTEM_INCLUDES} 
	${SOURCES} ${COMPONENT_SOURCES} ${DRIVER_SOURCES} ${SYSTEM_SOURCES})
source_group("common" FILES ${INCLUDES} ${SOURCES})
source_group("components" FILES ${COMPONENT_INCLUDES} ${COMPONENT_SOURCES})
source_group("drivers" FILES ${DRIVER_INCLUDES} ${DRIVER_SOURCES})
source_group("systems" FILES ${SYSTEM_INCLUDES} ${SYSTEM_SOURCES})
set_target_properties(flame_universe PROPERTIES FOLDER "flame")
target_compile_definitions(flame_universe PRIVATE FLAME_UNIVERSE_MODULE)
target_include_directories(flame_universe PUBLIC "${CMAKE_SOURCE_DIR}/include")
target_link_libraries(flame_universe flame_network)
target_link_libraries(flame_universe flame_database)
target_link_libraries(flame_universe flame_graphics)
target_link_libraries(flame_universe flame_sound)
target_link_libraries(flame_universe flame_physics)
target_link_libraries(flame_universe flame_script)
add_typeinfo_support(flame_universe "${CMAKE_CURRENT_SOURCE_DIR}")
target_include_directories(flame_universe PRIVATE "${SHADER_DIR}")
add_dependencies(flame_universe shader_compiler)
add_custom_command(TARGET flame_universe PRE_BUILD COMMAND $<TARGET_FILE:shader_compiler> "${SHADER_DIR}/element/element.pll")
add_custom_command(TARGET flame_universe PRE_BUILD COMMAND $<TARGET_FILE:shader_compiler> "${SHADER_DIR}/mesh/defe_geom.pll")
