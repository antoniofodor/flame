file(GLOB_RECURSE source_files "*.h*" "*.c*")
add_library(flame_universe SHARED ${source_files})
assign_source_group("${CMAKE_CURRENT_SOURCE_DIR}" "" ${source_files})
set_target_properties(flame_universe PROPERTIES FOLDER "flame")
target_compile_definitions(flame_universe PRIVATE FLAME_UNIVERSE_MODULE)
target_link_libraries(flame_universe flame_graphics)
if (USE_SOUND_MODULE)
	target_compile_definitions(flame_universe PUBLIC USE_SOUND_MODULE)
	target_link_libraries(flame_universe flame_sound)
endif()
if (USE_PHYSICS_MODULE)
	target_compile_definitions(flame_universe PUBLIC USE_PHYSICS_MODULE)
	target_link_libraries(flame_universe flame_physics)
endif()
add_dependencies(flame_universe typeinfogen_dep)
add_custom_command(TARGET flame_universe POST_BUILD COMMAND $<TARGET_FILE:typeinfogen> -i $<TARGET_FILE:flame_universe> -d "${CMAKE_CURRENT_SOURCE_DIR}/typeinfo.desc")

file(GLOB PUBLIC_HEADER_FILES "*.h*")
list(FILTER PUBLIC_HEADER_FILES EXCLUDE REGEX ".*_private[.]h$")
file(MAKE_DIRECTORY "${CMAKE_SOURCE_DIR}/include/flame/universe")
if(PUBLIC_HEADER_FILES)
	add_custom_command(TARGET flame_universe PRE_BUILD COMMAND ${CMAKE_COMMAND} -E copy_if_different ${PUBLIC_HEADER_FILES} "${CMAKE_SOURCE_DIR}/include/flame/universe")
endif()

file(GLOB PUBLIC_HEADER_FILES "components/*.h*")
list(FILTER PUBLIC_HEADER_FILES EXCLUDE REGEX ".*_private[.]h$")
file(MAKE_DIRECTORY "${CMAKE_SOURCE_DIR}/include/flame/universe/components")
if(PUBLIC_HEADER_FILES)
	add_custom_command(TARGET flame_universe PRE_BUILD COMMAND ${CMAKE_COMMAND} -E copy_if_different ${PUBLIC_HEADER_FILES} "${CMAKE_SOURCE_DIR}/include/flame/universe/components")
endif()

file(GLOB PUBLIC_HEADER_FILES "systems/*.h*")
list(FILTER PUBLIC_HEADER_FILES EXCLUDE REGEX ".*_private[.]h$")
file(MAKE_DIRECTORY "${CMAKE_SOURCE_DIR}/include/flame/universe/systems")
if(PUBLIC_HEADER_FILES)
	add_custom_command(TARGET flame_universe PRE_BUILD COMMAND ${CMAKE_COMMAND} -E copy_if_different ${PUBLIC_HEADER_FILES} "${CMAKE_SOURCE_DIR}/include/flame/universe/systems")
endif()