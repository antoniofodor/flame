file(GLOB source_files "*.h*" "*.c*")
add_library(flame_script SHARED ${source_files})
set_target_properties(flame_script PROPERTIES FOLDER "flame")
target_compile_definitions(flame_script PRIVATE FLAME_SCRIPT_MODULE)
target_link_libraries(flame_script flame_foundation)
if (USE_LUA)
	target_compile_definitions(flame_script PRIVATE USE_LUA)
	target_include_directories(flame_script PRIVATE "${LUA_INCLUDE_DIR}")
	target_link_libraries(flame_script "${LUA_LIB_PATH}")
	add_custom_command(TARGET flame_script POST_BUILD COMMAND ${CMAKE_COMMAND} -E copy_if_different "${LUA_DLL_PATH}" $(TargetDir))
else()
	message(STATUS "script module: LUA is required for backend")
endif()

file(GLOB PUBLIC_HEADER "*.h*")
list(FILTER PUBLIC_HEADER EXCLUDE REGEX ".*_private[.]h$")
file(MAKE_DIRECTORY "${CMAKE_SOURCE_DIR}/include/flame/script")
add_custom_command(TARGET flame_script PRE_BUILD COMMAND ${CMAKE_COMMAND} -E copy_if_different ${PUBLIC_HEADER} "${CMAKE_SOURCE_DIR}/include/flame/script")
