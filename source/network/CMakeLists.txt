file(GLOB source_files "*.h*" "*.c*")
add_library(flame_network SHARED ${source_files})
set_target_properties(flame_network PROPERTIES FOLDER "flame")
target_compile_definitions(flame_network PRIVATE FLAME_NETWORK_MODULE)
target_link_libraries(flame_network flame_foundation)
target_link_libraries(flame_network ws2_32.lib)
if (USE_SHA1)
	target_compile_definitions(flame_network PRIVATE USE_SHA1)
	target_include_directories(flame_network PRIVATE "${SHA1_INCLUDE_DIR}")
else()
	message(STATUS "network module: SHA1 is required for websocket")
endif()
add_dependencies(flame_network typeinfogen_dep)
add_custom_command(TARGET flame_network POST_BUILD COMMAND $<TARGET_FILE:typeinfogen> -i $<TARGET_FILE:flame_network> -d "${CMAKE_CURRENT_SOURCE_DIR}/typeinfo.desc")

file(GLOB PUBLIC_HEADER "*.h*")
list(FILTER PUBLIC_HEADER EXCLUDE REGEX ".*_private[.]h$")
file(MAKE_DIRECTORY "${CMAKE_SOURCE_DIR}/include/flame/network")
file(COPY ${PUBLIC_HEADER} DESTINATION "${CMAKE_SOURCE_DIR}/include/flame/network")
add_custom_command(TARGET flame_network PRE_BUILD COMMAND ${CMAKE_COMMAND} -E copy_if_different ${PUBLIC_HEADER} "${CMAKE_SOURCE_DIR}/include/flame/network")
