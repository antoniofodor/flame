%vs=../fullscreen.vert
%pt=TriangleList
layout
  @pll
shaders
  {vs}
 ---
  @frag
renderpass
  {rp}
primitive_topology
  {pt}
cull_mode
  None

@pll
layout(push_constant) uniform PushConstant
{
    vec2 uv_off;
    float uv_scl;
    float val_base;
    float val_scl;
    float falloff;
    float power;
}pc;
@

@frag
layout (location = 0) in vec2 i_uv;
#ifdef USE_VERTEX_VAL_BASE
layout (location = 1) in float i_val_base;
#endif

layout (location = 0) out vec4 o_col;

#include "../math.h"

void main()
{
    float value = pow(perlin(i_uv * pc.uv_scl + pc.uv_off), pc.power);
    float to_edge = min(min(i_uv.x, 1.0 - i_uv.x), min(i_uv.y, 1.0 - i_uv.y));
    if (to_edge < pc.falloff)
    {
       float d = (pc.falloff - to_edge) / pc.falloff;
       value *= 1.0 - d * d;
    }
    float val_base = 0.0;
    #ifndef USE_VERTEX_VAL_BASE
        val_base = pc.val_base;
    #else
        val_base = i_val_base;
    #endif
    o_col = vec4(vec3(val_base + value * pc.val_scl), 1.0);
}
@
