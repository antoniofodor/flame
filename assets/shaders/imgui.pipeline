layout
  @pll
shaders
  @vert
 ---
  @frag
renderpass
  {rp}
vertex_buffers
  attributes
    location
      0
    format
      R32G32_SFLOAT
   ---
    location
      1
    format
      R32G32_SFLOAT
   ---
    location
      2
    format
      R8G8B8A8_UNORM
cull_mode
  None
blend_options
  enable
    true
  src_color
    SrcAlpha
  dst_color
    OneMinusSrcAlpha
  src_alpha
    Zero
  dst_alpha
    Zero

@pll
layout (set = SET, binding = 0) uniform sampler2D image;

layout(push_constant) uniform PushConstant
{
	vec2 scale;
	vec2 translate;
    vec2 view_range;
}pc;
@

@vert
layout (location = 0) in vec2 i_pos;
layout (location = 1) in vec2 i_uv;
layout (location = 2) in vec4 i_col;

layout (location = 0) out vec4 o_col;
layout (location = 1) out vec2 o_uv;

void main()
{
	o_col = i_col;
	o_uv = i_uv;
	gl_Position = vec4(i_pos * pc.scale + pc.translate, 0, 1);
}
@

@frag
#include "math.glsl"

layout (location = 0) in vec4 i_col;
layout (location = 1) in vec2 i_uv;

layout (location = 0) out vec4 o_col;

void main()
{
    vec4 sampled = texture(image, i_uv);
	o_col = i_col * map_01(sampled, pc.view_range.x, pc.view_range.y);
}
@
