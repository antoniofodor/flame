#extension GL_KHR_shader_subgroup_ballot : require

#include "declares.glsl"

taskPayloadSharedEXT Task OUT;

layout(local_size_x = 1) in;
void main()
{
	const uint lane_id = gl_LocalInvocationID.x;
	const uint wg_id = gl_WorkGroupID.x;

	// process a 4x4x4 volume
	uint mi_x = 4 * ((wg_id >> (0*(SHIFT-2))) & (GRID_SIZE/4 - 1));
	uint mi_y = 4 * ((wg_id >> (1*(SHIFT-2))) & (GRID_SIZE/4 - 1));
	uint mi_z = 4 * ((wg_id >> (2*(SHIFT-2))));
	
	// Two loops, all lanes used
	for (uint i = lane_id; i < 64; i += 32)
	{
		uint x = i & 0x3;
		uint y = (i >> 2) & 0x3;
		uint z = i >> 4;

		// output all cells for testing
		OUT.meshlets[lane_id] = ((((mi_z + z) << SHIFT) + mi_y + y) << SHIFT) + mi_x + x;
	}

	EmitMeshTasksEXT(64, 1, 1);
}
