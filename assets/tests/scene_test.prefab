<?xml version="1.0"?>
<prefab>
  <entity>
    <cElement alignx="MinMax" aligny="MinMax" />
    <cNode />
    <cScript>
      cmd = root.find_component("cCommand")
    </cScript>
    <entity name="scene">
      <cNode />
      <cScript src="tests/shoot_ball.lua" />
      <entity src="D:\sky\sky" />
      <eCube pos="0,150,0" dynamic="false" />
      <eCube pos="10,150,0" dynamic="false" />
      <eCube pos="0,150,5" dynamic="false" />
      <entity src="D:\tree02\tree">
        <cNode pos="10,143,10" />
      </entity>
      <entity src="D:\character\character" >
        <cNode pos="0,155,0" />
        <cController radius="0.5" height="1.8" />
        <cScript src="character_controller.lua" />
        <entity name="camera">
          <cNode pos="0,5,0" euler="0,0,0" />
          <cCamera current="true" />
          <cScript src="camera_third.lua" />
        </entity>
      </entity>
      <entity src="D:\terrain\terrain">
        <cNode pos="-100,100,-100" />
      </entity>
      <entity>
        <cNode euler="0,90,0" />
        <cLight type="Directional" color="1.0,1.0,1.0" cast_shadow="true" />
      </entity>
    </entity>
    <entity>
      <cElement />
      <cPostEffect enable_bloom="true" />
    </entity>
    <entity name="debug">
      <cElement />
    </entity>
    <entity name="hud_global_axes">
      <cElement width="100" height="100" alignx="Max" aligny="Max" fill_color="0,0,0,100" />
      <cScript>
        local element = entity.find_component("cElement")
        flame_perspective(0, 45, 1, 1, 100)
        element.add_drawer(function(canvas)
          local p0 = element.get_point(0)
          local p2 = element.get_point(2)
          local sz = p2 - p0
          p0 = p0 + sz * 0.5
          __mat_id__ = 1
          canvas.get_view_matrix()

          local a0 = flame_transform(1, vec4(0, 0, 0, 0))
          a0.z = a0.z - 5
          a0 = flame_transform(0, a0)
          a0.x = a0.x / a0.w
          a0.y = a0.y / a0.w
          local a0_2 = vec2(a0.x, a0.y)

          local ax = flame_transform(1, vec4(1, 0, 0, 0))
          ax.z = ax.z - 5
          ax = flame_transform(0, ax)
          ax.x = ax.x / ax.w
          ax.y = ax.y / ax.w
          canvas.begin_path()
          canvas.move_to(a0_2 * sz + p0)
          canvas.line_to(vec2(ax.x, ax.y) * sz + p0)
          canvas.stroke(vec4(255, 0, 0, 255), 2, false)

          local ay = flame_transform(1, vec4(0, 1, 0, 0))
          ay.z = ay.z - 5
          ay = flame_transform(0, ay)
          ay.x = ay.x / ay.w
          ay.y = ay.y / ay.w
          canvas.begin_path()
          canvas.move_to(a0_2 * sz + p0)
          canvas.line_to(vec2(ay.x, ay.y) * sz + p0)
          canvas.stroke(vec4(0, 255, 0, 255), 2, false)

          local az = flame_transform(1, vec4(0, 0, 1, 0))
          az.z = az.z - 5
          az = flame_transform(0, az)
          az.x = az.x / az.w
          az.y = az.y / az.w
          canvas.begin_path()
          canvas.move_to(a0_2 * sz + p0)
          canvas.line_to(vec2(az.x, az.y) * sz + p0)
          canvas.stroke(vec4(0, 0, 255, 255), 2, false)
        end, true)
      </cScript>
    </entity>
    <eElement name="ui" alignx="MinMax" aligny="MinMax" >
      <eMenuBar>
        <eMenu text="shading" >
		      <eMenuItem checkable="true" checked="true" text="solid" >
            <cScript>
              entity.find_component("cReceiver").add_mouse_left_down_listener(function()
                cmd.excute("shading_solid")
              end)
            </cScript>
          </eMenuItem>
		      <eMenuItem checkable="true" text="wireframe" >
            <cScript>
              entity.find_component("cReceiver").add_mouse_left_down_listener(function()
                cmd.excute("shading_wireframe")
              end)
            </cScript>
          </eMenuItem>
        </eMenu>
        <eMenu text="physics" >
		      <eMenuItem checkable="true" text="visualization" >
            <cScript>
              local menu_item = entity.find_driver("dMenuItem")
              entity.find_component("cReceiver").add_mouse_left_down_listener(function()
                local checked = menu_item.get_checked()
                checked = not checked
                menu_item.set_checked(checked)
                if checked then
                  cmd.excute("physics_visualization_on")
                else
                  cmd.excute("physics_visualization_off")
                end
              end)
            </cScript>
          </eMenuItem>
        </eMenu>
      </eMenuBar>
    </eElement>
  </entity>
</prefab>
